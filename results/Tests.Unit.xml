<?xml version="1.0" encoding="utf-8" standalone="no"?>
<!--This file represents the results of running a test suite-->
<test-results name="d:\Desenvolvimento\Caio\smart-track\src\SmartTrack.Tests.Unit\bin\debug\SmartTrack.Tests.Unit.dll" total="53" errors="0" failures="0" not-run="2" inconclusive="0" ignored="2" skipped="0" invalid="0" date="2011-09-07" time="19:22:32">
  <environment nunit-version="2.5.7.10213" clr-version="2.0.50727.4961" os-version="Microsoft Windows NT 6.1.7600.0" platform="Win32NT" cwd="d:\Desenvolvimento\Caio\smart-track" machine-name="CAIOKF-PC" user="caiokf" user-domain="caiokf-pc" />
  <culture-info current-culture="pt-BR" current-uiculture="en-US" />
  <test-suite type="Assembly" name="d:\Desenvolvimento\Caio\smart-track\src\SmartTrack.Tests.Unit\bin\debug\SmartTrack.Tests.Unit.dll" executed="True" result="Success" success="True" time="2.098" asserts="0">
    <results>
      <test-suite type="Namespace" name="SmartTrack" executed="True" result="Success" success="True" time="2.086" asserts="0">
        <results>
          <test-suite type="Namespace" name="Tests" executed="True" result="Success" success="True" time="2.072" asserts="0">
            <results>
              <test-suite type="Namespace" name="Unit" executed="True" result="Success" success="True" time="2.070" asserts="0">
                <results>
                  <test-suite type="TestFixture" name="Conventions" executed="True" result="Success" success="True" time="0.962" asserts="0">
                    <results>
                      <test-case name="SmartTrack.Tests.Unit.Conventions.every_request_model_should_specify_how_values_are_routed" executed="True" result="Success" success="True" time="0.954" asserts="0" />
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Measures" executed="True" result="Success" success="True" time="0.128" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="GroupsEvents" executed="True" result="Success" success="True" time="0.036" asserts="0">
                        <results>
                          <test-case name="SmartTrack.Tests.Unit.Measures.GroupsEvents.create_new_group" executed="True" result="Success" success="True" time="0.022" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.GroupsEvents.create_new_group_with_name_of_existing_group_should_have_no_effect" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.GroupsEvents.create_two_groups" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.GroupsEvents.delete_a_group" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.GroupsEvents.delete_a_non_existing_group" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.GroupsEvents.edit_an_existing_group" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.GroupsEvents.edit_an_existing_group_to_an_empty_name" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.GroupsEvents.edit_an_existing_group_to_an_existing_group_name_should_have_no_effect" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="MeasuresEvents" executed="True" result="Success" success="True" time="0.054" asserts="0">
                        <results>
                          <test-case name="SmartTrack.Tests.Unit.Measures.MeasuresEvents.add_a_non_existing_measure_to_a_group" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.MeasuresEvents.add_a_non_existing_measure_to_a_non_existing_group" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.MeasuresEvents.add_an_existing_measure_to_a_group" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.MeasuresEvents.add_an_existing_measure_to_a_non_existing_group" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.MeasuresEvents.add_existing_measure" executed="True" result="Success" success="True" time="0.027" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.MeasuresEvents.add_more_than_one_measure" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.MeasuresEvents.add_one_measure" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.MeasuresEvents.create_new_measure" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.MeasuresEvents.create_new_measure_with_same_name_should_not_create_new_one" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.MeasuresEvents.edit_existing_measure" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.MeasuresEvents.edit_measure_name_to_be_empty_should_have_no_effect" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.MeasuresEvents.edit_measure_name_to_be_same_as_other_existing_measure_should_have_no_effect_on_name" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.MeasuresEvents.edit_non_existing_measure_have_no_effect" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.MeasuresEvents.remove_a_measure_from_a_group" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.MeasuresEvents.remove_existing_measures" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.MeasuresEvents.remove_non_existing_measures" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="TagsEvents" executed="True" result="Success" success="True" time="0.026" asserts="0">
                        <results>
                          <test-case name="SmartTrack.Tests.Unit.Measures.TagsEvents.add_a_non_existing_tag_to_a_group" executed="True" result="Success" success="True" time="0.003" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.TagsEvents.add_a_non_existing_tag_to_a_non_existing_group" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.TagsEvents.add_an_existing_tag_to_a_group" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.TagsEvents.add_an_existing_tag_to_a_non_existing_group" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.TagsEvents.create_new_tag" executed="True" result="Success" success="True" time="0.008" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.TagsEvents.create_new_tag_null_start_date_should_have_no_effect" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.TagsEvents.create_new_tag_with_empty_name_should_have_no_effect" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.TagsEvents.create_new_tag_with_same_name_and_start_date_as_existing_tag_should_have_no_effect" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.TagsEvents.create_new_tag_with_whitespace_name_should_have_no_effect" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.TagsEvents.existing_tag_deleted" executed="True" result="Success" success="True" time="0.002" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.TagsEvents.non_existing_tag_deleted_with_different_date" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.TagsEvents.non_existing_tag_deleted_with_different_name" executed="True" result="Success" success="True" time="0.000" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Measures.TagsEvents.remove_a_tag_from_a_group" executed="True" result="Success" success="True" time="0.001" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="UserAggregateEvents" executed="True" result="Success" success="True" time="0.004" asserts="0">
                        <results>
                          <test-case name="SmartTrack.Tests.Unit.Measures.UserAggregateEvents.should_not_receive_events_not_subscribed_to" executed="True" result="Success" success="True" time="0.003" asserts="1" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Transactions" executed="True" result="Success" success="True" time="0.600" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="TransactionBoundaryTests" executed="True" result="Success" success="True" time="0.596" asserts="0">
                        <results>
                          <test-case name="SmartTrack.Tests.Unit.Transactions.TransactionBoundaryTests.commit_should_call_on_transaction" executed="True" result="Success" success="True" time="0.587" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Transactions.TransactionBoundaryTests.when_started_should_open_session_and_begin_transaction" executed="True" result="Success" success="True" time="0.008" asserts="0" />
                        </results>
                      </test-suite>
                      <test-suite type="TestFixture" name="TransactionProcessorTests" executed="True" result="Inconclusive" success="False" time="0.001" asserts="0">
                        <results>
                          <test-case name="SmartTrack.Tests.Unit.Transactions.TransactionProcessorTests.should_commit_in_the_end_of_execution" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                          <test-case name="SmartTrack.Tests.Unit.Transactions.TransactionProcessorTests.should_rollback_in_case_of_exception_and_rethrow" executed="False" result="Ignored">
                            <reason>
                              <message><![CDATA[]]></message>
                            </reason>
                          </test-case>
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                  <test-suite type="Namespace" name="Validations" executed="True" result="Success" success="True" time="0.366" asserts="0">
                    <results>
                      <test-suite type="TestFixture" name="LoginJoinInputValidationTests" executed="True" result="Success" success="True" time="0.365" asserts="0">
                        <results>
                          <test-case name="SmartTrack.Tests.Unit.Validations.LoginJoinInputValidationTests.email_confirmation_should_match_email" executed="True" result="Success" success="True" time="0.281" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Validations.LoginJoinInputValidationTests.email_is_required" executed="True" result="Success" success="True" time="0.006" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Validations.LoginJoinInputValidationTests.email_should_be_unique" executed="True" result="Success" success="True" time="0.019" asserts="0" />
                          <test-suite type="ParameterizedTest" name="email_should_be_valid" executed="True" result="Success" success="True" time="0.033" asserts="0">
                            <results>
                              <test-case name="SmartTrack.Tests.Unit.Validations.LoginJoinInputValidationTests.email_should_be_valid(&quot;user.domain&quot;,False)" executed="True" result="Success" success="True" time="0.010" asserts="1" />
                              <test-case name="SmartTrack.Tests.Unit.Validations.LoginJoinInputValidationTests.email_should_be_valid(&quot;user@.com&quot;,False)" executed="True" result="Success" success="True" time="0.005" asserts="1" />
                              <test-case name="SmartTrack.Tests.Unit.Validations.LoginJoinInputValidationTests.email_should_be_valid(&quot;@domain.com&quot;,False)" executed="True" result="Success" success="True" time="0.005" asserts="1" />
                              <test-case name="SmartTrack.Tests.Unit.Validations.LoginJoinInputValidationTests.email_should_be_valid(&quot;user@domain&quot;,False)" executed="True" result="Success" success="True" time="0.006" asserts="1" />
                              <test-case name="SmartTrack.Tests.Unit.Validations.LoginJoinInputValidationTests.email_should_be_valid(&quot;user@domain.com&quot;,True)" executed="True" result="Success" success="True" time="0.005" asserts="1" />
                            </results>
                          </test-suite>
                          <test-case name="SmartTrack.Tests.Unit.Validations.LoginJoinInputValidationTests.password_confirmation_should_match_password" executed="True" result="Success" success="True" time="0.004" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Validations.LoginJoinInputValidationTests.password_is_required" executed="True" result="Success" success="True" time="0.004" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Validations.LoginJoinInputValidationTests.username_is_required" executed="True" result="Success" success="True" time="0.005" asserts="0" />
                          <test-case name="SmartTrack.Tests.Unit.Validations.LoginJoinInputValidationTests.username_should_be_unique" executed="True" result="Success" success="True" time="0.007" asserts="0" />
                        </results>
                      </test-suite>
                    </results>
                  </test-suite>
                </results>
              </test-suite>
            </results>
          </test-suite>
        </results>
      </test-suite>
    </results>
  </test-suite>
</test-results>